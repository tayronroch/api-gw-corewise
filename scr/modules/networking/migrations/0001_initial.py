# Generated by Django 5.2.5 on 2025-08-09 02:07

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Cidade',
                'verbose_name_plural': 'Cidades',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BGPConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('router_ip', models.GenericIPAddressField()),
                ('vlan', models.CharField(max_length=10)),
                ('client_name', models.CharField(max_length=255)),
                ('subnet_v4', models.CharField(help_text='Formato: 10.10.10.0/30', max_length=20)),
                ('client_network_v4', models.CharField(help_text='Formato: 170.80.80.0/22', max_length=20)),
                ('v4_size', models.IntegerField(default=24)),
                ('subnet_v6', models.CharField(help_text='Formato: 2001:db8::/126', max_length=50)),
                ('client_network_v6', models.CharField(help_text='Formato: 2804:3768::/32', max_length=50)),
                ('v6_size', models.IntegerField(default=48)),
                ('client_asn', models.IntegerField(help_text='Autonomous System Number do cliente')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuração BGP',
                'verbose_name_plural': 'Configurações BGP',
            },
        ),
        migrations.CreateModel(
            name='L2VPNConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pe1_mode', models.CharField(choices=[('qinq', 'QinQ'), ('access', 'Access'), ('vlan-selective', 'VLAN Selective')], default='qinq', max_length=20)),
                ('pe2_mode', models.CharField(choices=[('qinq', 'QinQ'), ('access', 'Access'), ('vlan-selective', 'VLAN Selective')], default='qinq', max_length=20)),
                ('pe1_vpws_group_name', models.CharField(max_length=100)),
                ('pe1_vpn_id', models.CharField(max_length=50)),
                ('pe1_neighbor_ip', models.GenericIPAddressField()),
                ('pe1_pw_id', models.CharField(max_length=50)),
                ('pe1_access_interface', models.CharField(max_length=100)),
                ('pe1_dot1q', models.CharField(blank=True, max_length=10, null=True)),
                ('pe1_pw_vlan', models.CharField(blank=True, max_length=10, null=True)),
                ('pe1_neighbor_targeted_ip', models.GenericIPAddressField()),
                ('pe2_vpws_group_name', models.CharField(max_length=100)),
                ('pe2_vpn_id', models.CharField(max_length=50)),
                ('pe2_neighbor_ip', models.GenericIPAddressField()),
                ('pe2_pw_id', models.CharField(max_length=50)),
                ('pe2_access_interface', models.CharField(max_length=100)),
                ('pe2_dot1q', models.CharField(blank=True, max_length=10, null=True)),
                ('pe2_pw_vlan', models.CharField(blank=True, max_length=10, null=True)),
                ('pe2_neighbor_targeted_ip', models.GenericIPAddressField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pe1_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='l2vpn_pe1_configs', to='networking.city')),
                ('pe2_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='l2vpn_pe2_configs', to='networking.city')),
            ],
            options={
                'verbose_name': 'Configuração L2VPN',
                'verbose_name_plural': 'Configurações L2VPN',
            },
        ),
        migrations.CreateModel(
            name='NetworkInterface',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('interface_type', models.CharField(choices=[('gigabit', 'Gigabit Ethernet'), ('ten-gigabit', 'Ten Gigabit'), ('forty-gigabit', 'Forty Gigabit'), ('twenty-five-gigabit', 'Twenty Five Gigabit'), ('hundred-gigabit', 'Hundred Gigabit'), ('lag', 'Link Aggregation Group')], default='gigabit', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interfaces', to='networking.city')),
            ],
            options={
                'verbose_name': 'Interface de Rede',
                'verbose_name_plural': 'Interfaces de Rede',
            },
        ),
        migrations.CreateModel(
            name='OSPFConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('router_ip', models.GenericIPAddressField()),
                ('process_id', models.IntegerField(default=1)),
                ('router_id', models.GenericIPAddressField(protocol='IPv4')),
                ('area_id', models.CharField(default='0', max_length=20)),
                ('interface', models.CharField(max_length=100)),
                ('cost', models.IntegerField(default=100, help_text='Interface cost (1-65535)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuração OSPF',
                'verbose_name_plural': 'Configurações OSPF',
            },
        ),
        migrations.CreateModel(
            name='NetworkConfigurationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('operation_type', models.CharField(choices=[('l2vpn', 'L2VPN Configuration'), ('bgp', 'BGP Configuration'), ('ospf', 'OSPF Configuration'), ('commit', 'Commit Configuration')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('running', 'Executando'), ('success', 'Sucesso'), ('failed', 'Falhou'), ('cancelled', 'Cancelado')], default='pending', max_length=20)),
                ('target_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('username', models.CharField(max_length=100)),
                ('commands_executed', models.JSONField(default=list)),
                ('output', models.TextField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('bgp_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='networking.bgpconfiguration')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('l2vpn_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='networking.l2vpnconfiguration')),
                ('ospf_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='networking.ospfconfiguration')),
            ],
            options={
                'verbose_name': 'Log de Configuração',
                'verbose_name_plural': 'Logs de Configuração',
                'ordering': ['-started_at'],
            },
        ),
    ]
