# Generated by Django 5.2.5 on 2025-08-08 19:01

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('topology', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TopologyProjectSimple',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('center_latitude', models.FloatField(help_text='Latitude central do projeto')),
                ('center_longitude', models.FloatField(help_text='Longitude central do projeto')),
                ('zoom_level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18')], default=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'topology_projects_simple',
                'indexes': [models.Index(fields=['name'], name='topology_pr_name_b88a00_idx'), models.Index(fields=['created_at'], name='topology_pr_created_06ed56_idx')],
            },
        ),
        migrations.CreateModel(
            name='NetworkDeviceSimple',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('device_type', models.CharField(choices=[('router', 'Roteador'), ('switch', 'Switch'), ('server', 'Servidor'), ('host', 'Host'), ('antenna', 'Antena'), ('building', 'Prédio'), ('datacenter', 'Data Center'), ('pop', 'Ponto de Presença')], max_length=20)),
                ('latitude', models.FloatField(help_text='Latitude do dispositivo')),
                ('longitude', models.FloatField(help_text='Longitude do dispositivo')),
                ('altitude', models.FloatField(blank=True, help_text='Altitude em metros', null=True)),
                ('properties', models.JSONField(default=dict, help_text='Propriedades técnicas do dispositivo')),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('inactive', 'Inativo'), ('maintenance', 'Manutenção'), ('failure', 'Falha')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='topology.topologyprojectsimple')),
            ],
            options={
                'db_table': 'network_devices_simple',
            },
        ),
        migrations.CreateModel(
            name='NetworkConnectionSimple',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('connection_type', models.CharField(choices=[('fiber', 'Fibra Óptica'), ('wireless', 'Wireless'), ('ethernet', 'Ethernet'), ('satellite', 'Satélite'), ('microwave', 'Microondas'), ('logical', 'Lógica')], max_length=20)),
                ('properties', models.JSONField(default=dict, help_text='Propriedades técnicas da conexão')),
                ('path_coordinates', models.JSONField(default=list, help_text='Array de coordenadas do caminho')),
                ('is_calculated', models.BooleanField(default=False, help_text='Se o caminho foi calculado automaticamente')),
                ('calculation_method', models.CharField(choices=[('manual', 'Manual'), ('straight_line', 'Linha Reta'), ('custom_algorithm', 'Algoritmo Personalizado')], default='manual', max_length=20)),
                ('calculation_metadata', models.JSONField(default=dict, help_text='Metadados do cálculo do caminho')),
                ('style_properties', models.JSONField(default=dict, help_text='Propriedades de estilo visual')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outbound_connections', to='topology.networkdevicesimple')),
                ('target_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inbound_connections', to='topology.networkdevicesimple')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections', to='topology.topologyprojectsimple')),
            ],
            options={
                'db_table': 'network_connections_simple',
            },
        ),
        migrations.CreateModel(
            name='TopologySnapshotSimple',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('topology_data', models.JSONField(help_text='Dados completos da topologia em JSON')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='topology.topologyprojectsimple')),
            ],
            options={
                'db_table': 'topology_snapshots_simple',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='networkdevicesimple',
            index=models.Index(fields=['project', 'device_type'], name='network_dev_project_865749_idx'),
        ),
        migrations.AddIndex(
            model_name='networkdevicesimple',
            index=models.Index(fields=['status'], name='network_dev_status_830391_idx'),
        ),
        migrations.AddIndex(
            model_name='networkdevicesimple',
            index=models.Index(fields=['latitude', 'longitude'], name='network_dev_latitud_bfd5a9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='networkdevicesimple',
            unique_together={('project', 'name')},
        ),
        migrations.AddIndex(
            model_name='networkconnectionsimple',
            index=models.Index(fields=['project', 'connection_type'], name='network_con_project_709d53_idx'),
        ),
        migrations.AddIndex(
            model_name='networkconnectionsimple',
            index=models.Index(fields=['is_calculated'], name='network_con_is_calc_4c1c54_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='networkconnectionsimple',
            unique_together={('source_device', 'target_device')},
        ),
    ]
