# Generated by Django 5.2.5 on 2025-08-08 13:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TopologyProject',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('center_latitude', models.FloatField()),
                ('center_longitude', models.FloatField()),
                ('zoom', models.IntegerField(default=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('ptp_ip', models.GenericIPAddressField(blank=True, help_text='IP ponto a ponto da interface', null=True)),
                ('capacity_mbps', models.PositiveIntegerField(blank=True, help_text='Capacidade do enlace em Mbps', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_links', to='topology.equipment')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_links', to='topology.equipment')),
            ],
        ),
        migrations.CreateModel(
            name='TopologyNode',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('node_type', models.CharField(choices=[('router', 'Roteador'), ('switch', 'Switch'), ('server', 'Servidor'), ('host', 'Host'), ('antenna', 'Antena'), ('building', 'Prédio')], max_length=20)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('vendor', models.CharField(blank=True, max_length=100, null=True)),
                ('capacity', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('warning', 'Warning')], default='online', max_length=10)),
                ('connections', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='topology.topologyproject')),
            ],
        ),
        migrations.CreateModel(
            name='TopologyConnection',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('connection_type', models.CharField(choices=[('fiber', 'Fibra Óptica'), ('wireless', 'Wireless'), ('ethernet', 'Ethernet'), ('logical', 'Lógica')], max_length=20)),
                ('bandwidth', models.CharField(blank=True, max_length=50, null=True)),
                ('path', models.JSONField()),
                ('is_calculated', models.BooleanField(default=False)),
                ('distance', models.FloatField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('latency', models.FloatField(blank=True, null=True)),
                ('utilization', models.FloatField(blank=True, null=True)),
                ('traffic_inbound', models.BigIntegerField(blank=True, null=True)),
                ('traffic_outbound', models.BigIntegerField(blank=True, null=True)),
                ('traffic_latency', models.FloatField(blank=True, null=True)),
                ('color', models.CharField(default='#2196F3', max_length=7)),
                ('width', models.IntegerField(default=3)),
                ('opacity', models.FloatField(default=0.8)),
                ('dash_array', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_connections', to='topology.topologynode')),
                ('target_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_connections', to='topology.topologynode')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections', to='topology.topologyproject')),
            ],
        ),
        migrations.CreateModel(
            name='LinkTrafficHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('traffic_in_bps', models.BigIntegerField(help_text='Tráfego de entrada em bps')),
                ('traffic_out_bps', models.BigIntegerField(help_text='Tráfego de saída em bps')),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traffic_history', to='topology.link')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['link', 'timestamp'], name='topology_li_link_id_06f595_idx')],
            },
        ),
    ]
