# Generated by Django 5.2.5 on 2025-08-23 15:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalLoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('success', models.BooleanField(default=False)),
                ('failure_reason', models.CharField(blank=True, max_length=200)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('app_name', models.CharField(blank=True, help_text='App onde ocorreu a tentativa', max_length=50)),
                ('endpoint', models.CharField(blank=True, help_text='Endpoint de login', max_length=200)),
                ('geolocation', models.JSONField(blank=True, default=dict, help_text='Dados de geolocalização do IP')),
            ],
            options={
                'verbose_name': 'Tentativa de Login Global',
                'verbose_name_plural': 'Tentativas de Login Global',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['username', 'ip_address', '-timestamp'], name='core_global_usernam_40bcd8_idx'), models.Index(fields=['ip_address', '-timestamp'], name='core_global_ip_addr_1be035_idx'), models.Index(fields=['success', '-timestamp'], name='core_global_success_7e0b50_idx'), models.Index(fields=['app_name', '-timestamp'], name='core_global_app_nam_1b0f82_idx')],
            },
        ),
        migrations.CreateModel(
            name='GlobalSecuritySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_login_attempts', models.PositiveIntegerField(default=5, help_text='Número máximo de tentativas de login antes do bloqueio')),
                ('lockout_duration_minutes', models.PositiveIntegerField(default=15, help_text='Duração do bloqueio em minutos após exceder tentativas')),
                ('session_timeout_minutes', models.PositiveIntegerField(default=120, help_text='Tempo limite da sessão em minutos (0 = nunca expira)')),
                ('concurrent_sessions_limit', models.PositiveIntegerField(default=3, help_text='Número máximo de sessões simultâneas por usuário')),
                ('audit_retention_days', models.PositiveIntegerField(default=90, help_text='Quantos dias manter logs de auditoria (0 = manter sempre)')),
                ('access_log_retention_days', models.PositiveIntegerField(default=30, help_text='Quantos dias manter logs de acesso (0 = manter sempre)')),
                ('enable_ip_whitelist', models.BooleanField(default=False, help_text='Habilitar lista de IPs permitidos')),
                ('allowed_ips', models.TextField(blank=True, help_text='IPs permitidos (um por linha, suporta CIDR)')),
                ('enable_geo_blocking', models.BooleanField(default=False, help_text='Bloquear acessos de países específicos')),
                ('blocked_countries', models.TextField(blank=True, help_text='Códigos de países bloqueados (um por linha, formato ISO)')),
                ('password_min_length', models.PositiveIntegerField(default=8, help_text='Comprimento mínimo da senha')),
                ('password_require_uppercase', models.BooleanField(default=True, help_text='Exigir pelo menos uma letra maiúscula')),
                ('password_require_lowercase', models.BooleanField(default=True, help_text='Exigir pelo menos uma letra minúscula')),
                ('password_require_numbers', models.BooleanField(default=True, help_text='Exigir pelo menos um número')),
                ('password_require_symbols', models.BooleanField(default=False, help_text='Exigir pelo menos um símbolo especial')),
                ('password_history_count', models.PositiveIntegerField(default=5, help_text='Quantas senhas anteriores lembrar para evitar reuso')),
                ('mfa_required_for_admin', models.BooleanField(default=True, help_text='MFA obrigatório para usuários administrativos')),
                ('mfa_required_for_all', models.BooleanField(default=False, help_text='MFA obrigatório para todos os usuários')),
                ('mfa_backup_codes_count', models.PositiveIntegerField(default=10, help_text='Número de códigos de backup MFA gerados')),
                ('api_rate_limit_per_minute', models.PositiveIntegerField(default=100, help_text='Limite de requisições de API por minuto por usuário')),
                ('search_rate_limit_per_minute', models.PositiveIntegerField(default=30, help_text='Limite de buscas por minuto por usuário')),
                ('export_rate_limit_per_hour', models.PositiveIntegerField(default=10, help_text='Limite de exports por hora por usuário')),
                ('notify_admin_on_failed_login', models.BooleanField(default=True, help_text='Notificar admin sobre falhas de login')),
                ('notify_admin_on_user_lockout', models.BooleanField(default=True, help_text='Notificar admin sobre bloqueios de usuário')),
                ('notify_admin_on_suspicious_activity', models.BooleanField(default=True, help_text='Notificar admin sobre atividade suspeita')),
                ('admin_notification_email', models.EmailField(blank=True, help_text='Email para notificações administrativas', max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, help_text='Usuário que fez a última alteração', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configurações de Segurança Global',
                'verbose_name_plural': 'Configurações de Segurança Global',
            },
        ),
        migrations.CreateModel(
            name='UserActivitySummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_logins', models.PositiveIntegerField(default=0)),
                ('total_searches', models.PositiveIntegerField(default=0)),
                ('total_exports', models.PositiveIntegerField(default=0)),
                ('total_admin_actions', models.PositiveIntegerField(default=0)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('last_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('failed_login_attempts_today', models.PositiveIntegerField(default=0)),
                ('suspicious_activity_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='activity_summary', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resumo de Atividade do Usuário',
                'verbose_name_plural': 'Resumos de Atividade dos Usuários',
            },
        ),
        migrations.CreateModel(
            name='GlobalAccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('success', 'Sucesso'), ('failed', 'Falha'), ('logout', 'Logout'), ('locked', 'Conta Bloqueada'), ('mfa_required', 'MFA Necessário'), ('mfa_failed', 'MFA Falhou')], max_length=20)),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('failure_reason', models.CharField(blank=True, max_length=200)),
                ('app_name', models.CharField(blank=True, help_text='App onde ocorreu o acesso', max_length=50)),
                ('endpoint', models.CharField(blank=True, help_text='Endpoint acessado', max_length=200)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='global_access_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Acesso Global',
                'verbose_name_plural': 'Logs de Acesso Global',
                'ordering': ['-login_time'],
                'indexes': [models.Index(fields=['user', '-login_time'], name='core_global_user_id_8f1568_idx'), models.Index(fields=['ip_address', '-login_time'], name='core_global_ip_addr_45bacd_idx'), models.Index(fields=['status', '-login_time'], name='core_global_status_d32f15_idx'), models.Index(fields=['app_name', '-login_time'], name='core_global_app_nam_1b1390_idx')],
            },
        ),
        migrations.CreateModel(
            name='GlobalAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'Login realizado'), ('logout', 'Logout realizado'), ('password_change', 'Senha alterada'), ('mfa_setup', 'MFA configurado'), ('mfa_disable', 'MFA desabilitado'), ('search', 'Busca realizada'), ('advanced_search', 'Busca avançada'), ('filter_applied', 'Filtro aplicado'), ('create', 'Registro criado'), ('update', 'Registro atualizado'), ('delete', 'Registro deletado'), ('bulk_update', 'Atualização em lote'), ('bulk_delete', 'Exclusão em lote'), ('report_view', 'Relatório visualizado'), ('report_export', 'Relatório exportado'), ('dashboard_view', 'Dashboard visualizado'), ('system_backup', 'Backup do sistema'), ('system_restore', 'Restore do sistema'), ('system_maintenance', 'Manutenção do sistema'), ('config_change', 'Configuração alterada'), ('user_create', 'Usuário criado'), ('user_update', 'Usuário atualizado'), ('user_delete', 'Usuário removido'), ('user_lock', 'Usuário bloqueado'), ('user_unlock', 'Usuário desbloqueado'), ('permission_grant', 'Permissão concedida'), ('permission_revoke', 'Permissão revogada'), ('security_alert', 'Alerta de segurança'), ('suspicious_activity', 'Atividade suspeita'), ('access_denied', 'Acesso negado'), ('rate_limit_exceeded', 'Limite de taxa excedido'), ('topology_view', 'Topologia visualizada'), ('topology_edit', 'Topologia editada'), ('equipment_connect', 'Equipamento conectado'), ('network_config', 'Configuração de rede'), ('mpls_analysis', 'Análise MPLS'), ('engineering_task', 'Tarefa de engenharia')], max_length=50)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('app_name', models.CharField(help_text='Nome do app Django', max_length=50)),
                ('module_name', models.CharField(blank=True, help_text='Módulo específico (MPLS, Topology, etc)', max_length=50)),
                ('endpoint', models.CharField(blank=True, help_text='URL/endpoint acessado', max_length=200)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('search_query', models.TextField(blank=True, help_text='Query de busca realizada')),
                ('export_format', models.CharField(blank=True, help_text='Formato de export (xlsx, csv, pdf)', max_length=20)),
                ('results_count', models.PositiveIntegerField(blank=True, help_text='Quantidade de resultados', null=True)),
                ('old_values', models.JSONField(blank=True, default=dict, help_text='Valores anteriores (para updates)')),
                ('new_values', models.JSONField(blank=True, default=dict, help_text='Novos valores')),
                ('additional_data', models.JSONField(blank=True, default=dict, help_text='Dados extras em JSON')),
                ('execution_time_ms', models.PositiveIntegerField(blank=True, help_text='Tempo de execução em ms', null=True)),
                ('memory_usage_mb', models.FloatField(blank=True, help_text='Uso de memória em MB', null=True)),
                ('success', models.BooleanField(default=True, help_text='Se a ação foi bem sucedida')),
                ('error_message', models.TextField(blank=True, help_text='Mensagem de erro se houver')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='global_audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Auditoria Global',
                'verbose_name_plural': 'Logs de Auditoria Global',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='core_global_user_id_a01b2c_idx'), models.Index(fields=['action', '-timestamp'], name='core_global_action_4a2d73_idx'), models.Index(fields=['app_name', 'module_name', '-timestamp'], name='core_global_app_nam_c86f82_idx'), models.Index(fields=['ip_address', '-timestamp'], name='core_global_ip_addr_fa4357_idx'), models.Index(fields=['content_type', 'object_id'], name='core_global_content_8be2f1_idx'), models.Index(fields=['success', '-timestamp'], name='core_global_success_4c0cf3_idx')],
            },
        ),
    ]
