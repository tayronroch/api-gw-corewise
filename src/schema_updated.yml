openapi: 3.0.3
info:
  title: CoreWise Engineering API
  version: 1.0.0
  description: API completa para gerenciamento de infraestrutura de rede, topologia
    e engenharia de sistemas
  contact:
    name: CoreWise Team
    email: support@corewise.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /api/core/access-logs/:
    get:
      operationId: core_access_logs_list
      description: ViewSet para logs de acesso global - somente leitura
      parameters:
      - in: query
        name: app_name
        schema:
          type: string
      - in: query
        name: app_name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: ip_address
        schema:
          type: string
      - in: query
        name: login_time__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: login_time__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: login_time__range
        schema:
          type: array
          items:
            type: string
            format: date-time
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - failed
          - locked
          - logout
          - mfa_failed
          - mfa_required
          - success
        description: |-
          * `success` - Sucesso
          * `failed` - Falha
          * `logout` - Logout
          * `locked` - Conta Bloqueada
          * `mfa_required` - MFA Necessário
          * `mfa_failed` - MFA Falhou
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGlobalAccessLogList'
          description: ''
  /api/core/access-logs/{id}/:
    get:
      operationId: core_access_logs_retrieve
      description: ViewSet para logs de acesso global - somente leitura
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log de Acesso Global.
        required: true
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalAccessLog'
          description: ''
  /api/core/audit-logs/:
    get:
      operationId: core_audit_logs_list
      description: ViewSet para logs de auditoria global - somente leitura
      parameters:
      - in: query
        name: action
        schema:
          type: string
          enum:
          - access_denied
          - advanced_search
          - bulk_delete
          - bulk_update
          - config_change
          - create
          - dashboard_view
          - delete
          - engineering_task
          - equipment_connect
          - filter_applied
          - login
          - logout
          - mfa_disable
          - mfa_setup
          - mpls_analysis
          - network_config
          - password_change
          - permission_grant
          - permission_revoke
          - rate_limit_exceeded
          - report_export
          - report_view
          - search
          - security_alert
          - suspicious_activity
          - system_backup
          - system_maintenance
          - system_restore
          - topology_edit
          - topology_view
          - update
          - user_create
          - user_delete
          - user_lock
          - user_unlock
          - user_update
        description: |-
          * `login` - Login realizado
          * `logout` - Logout realizado
          * `password_change` - Senha alterada
          * `mfa_setup` - MFA configurado
          * `mfa_disable` - MFA desabilitado
          * `search` - Busca realizada
          * `advanced_search` - Busca avançada
          * `filter_applied` - Filtro aplicado
          * `create` - Registro criado
          * `update` - Registro atualizado
          * `delete` - Registro deletado
          * `bulk_update` - Atualização em lote
          * `bulk_delete` - Exclusão em lote
          * `report_view` - Relatório visualizado
          * `report_export` - Relatório exportado
          * `dashboard_view` - Dashboard visualizado
          * `system_backup` - Backup do sistema
          * `system_restore` - Restore do sistema
          * `system_maintenance` - Manutenção do sistema
          * `config_change` - Configuração alterada
          * `user_create` - Usuário criado
          * `user_update` - Usuário atualizado
          * `user_delete` - Usuário removido
          * `user_lock` - Usuário bloqueado
          * `user_unlock` - Usuário desbloqueado
          * `permission_grant` - Permissão concedida
          * `permission_revoke` - Permissão revogada
          * `security_alert` - Alerta de segurança
          * `suspicious_activity` - Atividade suspeita
          * `access_denied` - Acesso negado
          * `rate_limit_exceeded` - Limite de taxa excedido
          * `topology_view` - Topologia visualizada
          * `topology_edit` - Topologia editada
          * `equipment_connect` - Equipamento conectado
          * `network_config` - Configuração de rede
          * `mpls_analysis` - Análise MPLS
          * `engineering_task` - Tarefa de engenharia
      - in: query
        name: action__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: app_name
        schema:
          type: string
      - in: query
        name: app_name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: ip_address
        schema:
          type: string
      - in: query
        name: module_name
        schema:
          type: string
      - in: query
        name: module_name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: success
        schema:
          type: boolean
      - in: query
        name: timestamp__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: timestamp__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: timestamp__range
        schema:
          type: array
          items:
            type: string
            format: date-time
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGlobalAuditLogSummaryList'
          description: ''
  /api/core/audit-logs/{id}/:
    get:
      operationId: core_audit_logs_retrieve
      description: ViewSet para logs de auditoria global - somente leitura
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log de Auditoria Global.
        required: true
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalAuditLog'
          description: ''
  /api/core/audit-logs/my_activity/:
    get:
      operationId: core_audit_logs_my_activity_retrieve
      description: Retornar logs de atividade do usuário atual
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalAuditLog'
          description: ''
  /api/core/audit-logs/stats/:
    get:
      operationId: core_audit_logs_stats_retrieve
      description: Estatísticas de auditoria - apenas para staff
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalAuditLog'
          description: ''
  /api/core/auth/login:
    post:
      operationId: core_auth_login_create
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/core/auth/logout:
    post:
      operationId: core_auth_logout_create
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          description: No response body
  /api/core/auth/refresh:
    post:
      operationId: core_auth_refresh_create
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/core/auth/register:
    post:
      operationId: core_auth_register_create
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/core/cleanup-logs/:
    post:
      operationId: core_cleanup_logs_create
      description: Limpar logs antigos baseado nas configurações de retenção
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          description: No response body
  /api/core/health/:
    get:
      operationId: core_health_retrieve
      description: Endpoint de health check para monitoramento
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/core/login-attempts/:
    get:
      operationId: core_login_attempts_list
      description: ViewSet para tentativas de login global - somente leitura
      parameters:
      - in: query
        name: app_name
        schema:
          type: string
      - in: query
        name: app_name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: ip_address
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: success
        schema:
          type: boolean
      - in: query
        name: timestamp__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: timestamp__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: timestamp__range
        schema:
          type: array
          items:
            type: string
            format: date-time
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: username
        schema:
          type: string
      - in: query
        name: username__icontains
        schema:
          type: string
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGlobalLoginAttemptList'
          description: ''
  /api/core/login-attempts/{id}/:
    get:
      operationId: core_login_attempts_retrieve
      description: ViewSet para tentativas de login global - somente leitura
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tentativa de Login Global.
        required: true
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalLoginAttempt'
          description: ''
  /api/core/security-dashboard/:
    get:
      operationId: core_security_dashboard_retrieve
      description: Dashboard de segurança com estatísticas importantes
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          description: No response body
  /api/core/security-settings/:
    get:
      operationId: core_security_settings_list
      description: Retornar as configurações atuais
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGlobalSecuritySettingsList'
          description: ''
    post:
      operationId: core_security_settings_create
      description: ViewSet para configurações de segurança global
      tags:
      - core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalSecuritySettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GlobalSecuritySettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GlobalSecuritySettingsRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSecuritySettings'
          description: ''
  /api/core/security-settings/{id}/:
    get:
      operationId: core_security_settings_retrieve
      description: ViewSet para configurações de segurança global
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Configurações de Segurança
          Global.
        required: true
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSecuritySettings'
          description: ''
    put:
      operationId: core_security_settings_update
      description: Atualizar configurações
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Configurações de Segurança
          Global.
        required: true
      tags:
      - core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalSecuritySettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GlobalSecuritySettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GlobalSecuritySettingsRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSecuritySettings'
          description: ''
    patch:
      operationId: core_security_settings_partial_update
      description: ViewSet para configurações de segurança global
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Configurações de Segurança
          Global.
        required: true
      tags:
      - core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGlobalSecuritySettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGlobalSecuritySettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGlobalSecuritySettingsRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSecuritySettings'
          description: ''
    delete:
      operationId: core_security_settings_destroy
      description: ViewSet para configurações de segurança global
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Configurações de Segurança
          Global.
        required: true
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/core/user-activities/:
    get:
      operationId: core_user_activities_list
      description: ViewSet para resumos de atividade dos usuários
      parameters:
      - in: query
        name: failed_login_attempts_today__gte
        schema:
          type: integer
      - in: query
        name: failed_login_attempts_today__lte
        schema:
          type: integer
      - in: query
        name: last_activity__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: last_activity__lte
        schema:
          type: string
          format: date-time
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: suspicious_activity_count__gte
        schema:
          type: integer
      - in: query
        name: suspicious_activity_count__lte
        schema:
          type: integer
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserActivitySummaryList'
          description: ''
  /api/core/user-activities/{id}/:
    get:
      operationId: core_user_activities_retrieve
      description: ViewSet para resumos de atividade dos usuários
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Resumo de Atividade do
          Usuário.
        required: true
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivitySummary'
          description: ''
  /api/core/user-activities/{id}/update_counters/:
    post:
      operationId: core_user_activities_update_counters_create
      description: Atualizar contadores de atividade manualmente
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Resumo de Atividade do
          Usuário.
        required: true
      tags:
      - core
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserActivitySummaryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserActivitySummaryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserActivitySummaryRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivitySummary'
          description: ''
  /api/core/user-activities/my_summary/:
    get:
      operationId: core_user_activities_my_summary_retrieve
      description: Retornar resumo de atividade do usuário atual
      tags:
      - core
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivitySummary'
          description: ''
  /api/mpls-analyzer/api/customer-interface-report/:
    get:
      operationId: mpls_analyzer_api_customer_interface_report_retrieve
      description: Lista interfaces de clientes por equipamento
      summary: Relatório de Interfaces por Cliente
      parameters:
      - in: query
        name: equipment
        schema:
          type: string
        description: Nome do equipamento
        required: true
      tags:
      - mpls-analyzer
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/mpls-analyzer/api/customer-report/:
    get:
      operationId: mpls_analyzer_api_customer_report_retrieve
      description: Relatório completo de um cliente com todas suas VPNs
      summary: Relatório de Cliente
      parameters:
      - in: query
        name: customer
        schema:
          type: string
        description: Nome do cliente
        required: true
      tags:
      - mpls-analyzer
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/mpls-analyzer/api/customer-report/excel/:
    get:
      operationId: mpls_analyzer_api_customer_report_excel_retrieve
      description: Exporta relatório de cliente em formato Excel
      summary: Relatório Excel
      parameters:
      - in: query
        name: customer
        schema:
          type: string
        description: Nome do cliente
        required: true
      tags:
      - mpls-analyzer
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/mpls-analyzer/api/search/:
    get:
      operationId: mpls_analyzer_api_search_retrieve
      description: Busca inteligente por VPNs, equipamentos e configurações MPLS
      summary: Busca MPLS
      parameters:
      - in: query
        name: q
        schema:
          type: string
        description: Termo de busca (IP, VLAN, interface, etc.)
        required: true
      tags:
      - mpls-analyzer
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/mpls-analyzer/api/vpn-report/:
    get:
      operationId: mpls_analyzer_api_vpn_report_retrieve
      description: Relatório detalhado de uma VPN específica com informações de ponta
        A e B
      summary: Relatório VPN
      parameters:
      - in: query
        name: vpn_id
        schema:
          type: integer
        description: ID da VPN
        required: true
      tags:
      - mpls-analyzer
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/networking/Config_OSPF/:
    get:
      operationId: networking_Config_OSPF_retrieve
      description: |-
        Endpoint compatível para página de configuração OSPF
        Rota original: /Config_OSPF
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/networking/bgp/:
    get:
      operationId: networking_bgp_list
      description: ViewSet para configurações BGP
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBGPConfigurationList'
          description: ''
    post:
      operationId: networking_bgp_create
      description: ViewSet para configurações BGP
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPConfigurationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BGPConfigurationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BGPConfigurationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPConfiguration'
          description: ''
  /api/networking/bgp/{id}/:
    get:
      operationId: networking_bgp_retrieve
      description: ViewSet para configurações BGP
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração BGP.
        required: true
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPConfiguration'
          description: ''
    put:
      operationId: networking_bgp_update
      description: ViewSet para configurações BGP
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração BGP.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPConfigurationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BGPConfigurationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BGPConfigurationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPConfiguration'
          description: ''
    patch:
      operationId: networking_bgp_partial_update
      description: ViewSet para configurações BGP
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração BGP.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBGPConfigurationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBGPConfigurationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBGPConfigurationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPConfiguration'
          description: ''
    delete:
      operationId: networking_bgp_destroy
      description: ViewSet para configurações BGP
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração BGP.
        required: true
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/networking/bgp/{id}/execute/:
    post:
      operationId: networking_bgp_execute_create
      description: |-
        Executa configuração BGP no roteador
        Baseado na rota /gerar_bgp do l2vpn-master
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração BGP.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPConfigurationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BGPConfigurationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BGPConfigurationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPConfiguration'
          description: ''
  /api/networking/cidades/:
    get:
      operationId: networking_cidades_retrieve
      description: |-
        API compatível com l2vpn-master: /api/cidades
        Retorna lista de cidades no formato esperado pelo frontend original
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/networking/cities/:
    get:
      operationId: networking_cities_list
      description: ViewSet para gerenciar cidades - baseado na tabela 'cidades' do
        l2vpn-master
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCityList'
          description: ''
    post:
      operationId: networking_cities_create
      description: ViewSet para gerenciar cidades - baseado na tabela 'cidades' do
        l2vpn-master
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CityRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
  /api/networking/cities/{id}/:
    get:
      operationId: networking_cities_retrieve
      description: ViewSet para gerenciar cidades - baseado na tabela 'cidades' do
        l2vpn-master
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Cidade.
        required: true
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
    put:
      operationId: networking_cities_update
      description: ViewSet para gerenciar cidades - baseado na tabela 'cidades' do
        l2vpn-master
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Cidade.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CityRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
    patch:
      operationId: networking_cities_partial_update
      description: ViewSet para gerenciar cidades - baseado na tabela 'cidades' do
        l2vpn-master
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Cidade.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCityRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
    delete:
      operationId: networking_cities_destroy
      description: ViewSet para gerenciar cidades - baseado na tabela 'cidades' do
        l2vpn-master
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Cidade.
        required: true
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/networking/configure_l2vpn/:
    post:
      operationId: networking_configure_l2vpn_create
      description: |-
        Endpoint compatível com l2vpn-master: /configure_l2vpn
        Processa dados do formulário HTML original e executa configuração L2VPN
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/networking/executar_config_ospf/:
    post:
      operationId: networking_executar_config_ospf_create
      description: |-
        Endpoint compatível com l2vpn-master: /executar_config_ospf
        Processa configurações OSPF em lote (múltiplos roteadores)
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/networking/gerar_bgp/:
    get:
      operationId: networking_gerar_bgp_retrieve
      description: |-
        Endpoint compatível com l2vpn-master: /gerar_bgp
        Processa dados do formulário BGP original
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: networking_gerar_bgp_create
      description: |-
        Endpoint compatível com l2vpn-master: /gerar_bgp
        Processa dados do formulário BGP original
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/networking/interfaces/:
    get:
      operationId: networking_interfaces_list
      description: ViewSet para gerenciar interfaces de rede - baseado na tabela 'interfaces'
        do l2vpn-master
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNetworkInterfaceList'
          description: ''
    post:
      operationId: networking_interfaces_create
      description: ViewSet para gerenciar interfaces de rede - baseado na tabela 'interfaces'
        do l2vpn-master
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkInterfaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NetworkInterfaceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NetworkInterfaceRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
          description: ''
  /api/networking/interfaces/{id}/:
    get:
      operationId: networking_interfaces_retrieve
      description: ViewSet para gerenciar interfaces de rede - baseado na tabela 'interfaces'
        do l2vpn-master
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Interface de Rede.
        required: true
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
          description: ''
    put:
      operationId: networking_interfaces_update
      description: ViewSet para gerenciar interfaces de rede - baseado na tabela 'interfaces'
        do l2vpn-master
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Interface de Rede.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkInterfaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NetworkInterfaceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NetworkInterfaceRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
          description: ''
    patch:
      operationId: networking_interfaces_partial_update
      description: ViewSet para gerenciar interfaces de rede - baseado na tabela 'interfaces'
        do l2vpn-master
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Interface de Rede.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNetworkInterfaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNetworkInterfaceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNetworkInterfaceRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
          description: ''
    delete:
      operationId: networking_interfaces_destroy
      description: ViewSet para gerenciar interfaces de rede - baseado na tabela 'interfaces'
        do l2vpn-master
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Interface de Rede.
        required: true
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/networking/l2vpn/:
    get:
      operationId: networking_l2vpn_list
      description: ViewSet para configurações L2VPN VPWS
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedL2VPNConfigurationList'
          description: ''
    post:
      operationId: networking_l2vpn_create
      description: ViewSet para configurações L2VPN VPWS
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L2VPNConfigurationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/L2VPNConfigurationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/L2VPNConfigurationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2VPNConfiguration'
          description: ''
  /api/networking/l2vpn/{id}/:
    get:
      operationId: networking_l2vpn_retrieve
      description: ViewSet para configurações L2VPN VPWS
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração L2VPN.
        required: true
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2VPNConfiguration'
          description: ''
    put:
      operationId: networking_l2vpn_update
      description: ViewSet para configurações L2VPN VPWS
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração L2VPN.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L2VPNConfigurationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/L2VPNConfigurationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/L2VPNConfigurationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2VPNConfiguration'
          description: ''
    patch:
      operationId: networking_l2vpn_partial_update
      description: ViewSet para configurações L2VPN VPWS
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração L2VPN.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedL2VPNConfigurationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedL2VPNConfigurationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedL2VPNConfigurationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2VPNConfiguration'
          description: ''
    delete:
      operationId: networking_l2vpn_destroy
      description: ViewSet para configurações L2VPN VPWS
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração L2VPN.
        required: true
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/networking/l2vpn/{id}/execute/:
    post:
      operationId: networking_l2vpn_execute_create
      description: |-
        Executa configuração L2VPN nos dispositivos PE1 e PE2
        Baseado na rota /configure_l2vpn do l2vpn-master
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração L2VPN.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L2VPNConfigurationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/L2VPNConfigurationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/L2VPNConfigurationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2VPNConfiguration'
          description: ''
  /api/networking/logs/:
    get:
      operationId: networking_logs_list
      description: ViewSet para logs de configuração de rede
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNetworkConfigurationLogList'
          description: ''
  /api/networking/logs/{log_id}/status/:
    get:
      operationId: networking_logs_status_retrieve
      description: |-
        Obter status do log de execução - compatível com l2vpn-master
        Endpoint: /api/networking/logs/{log_id}/status/
      parameters:
      - in: path
        name: log_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/networking/logs/{id}/:
    get:
      operationId: networking_logs_retrieve
      description: ViewSet para logs de configuração de rede
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Log de Configuração.
        required: true
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfigurationLog'
          description: ''
  /api/networking/ospf/:
    get:
      operationId: networking_ospf_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOSPFConfigurationList'
          description: ''
    post:
      operationId: networking_ospf_create
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSPFConfigurationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OSPFConfigurationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OSPFConfigurationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPFConfiguration'
          description: ''
  /api/networking/ospf/{id}/:
    get:
      operationId: networking_ospf_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração OSPF.
        required: true
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPFConfiguration'
          description: ''
    put:
      operationId: networking_ospf_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração OSPF.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSPFConfigurationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OSPFConfigurationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OSPFConfigurationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPFConfiguration'
          description: ''
    patch:
      operationId: networking_ospf_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração OSPF.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOSPFConfigurationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOSPFConfigurationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOSPFConfigurationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPFConfiguration'
          description: ''
    delete:
      operationId: networking_ospf_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração OSPF.
        required: true
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/networking/ospf/{id}/execute/:
    post:
      operationId: networking_ospf_execute_create
      description: |-
        Executa configuração OSPF no roteador
        Baseado na rota /executar_config_ospf do l2vpn-master
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Configuração OSPF.
        required: true
      tags:
      - networking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSPFConfigurationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OSPFConfigurationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OSPFConfigurationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPFConfiguration'
          description: ''
  /api/networking/status/commit/:
    get:
      operationId: networking_status_commit_retrieve
      description: |-
        Status de commit global - compatível com l2vpn-master
        Endpoint: /api/networking/status/commit/
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/networking/test-connection/:
    post:
      operationId: networking_test_connection_create
      description: |-
        Testar conectividade SSH com um roteador
        Endpoint: /api/networking/test-connection/
      tags:
      - networking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/connections/:
    get:
      operationId: topology_connections_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTopologyConnectionList'
          description: ''
    post:
      operationId: topology_connections_create
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopologyConnectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopologyConnectionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyConnection'
          description: ''
  /api/topology/connections/{id}/:
    get:
      operationId: topology_connections_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this topology connection.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyConnection'
          description: ''
    put:
      operationId: topology_connections_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this topology connection.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopologyConnectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopologyConnectionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyConnection'
          description: ''
    patch:
      operationId: topology_connections_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this topology connection.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTopologyConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTopologyConnectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTopologyConnectionRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyConnection'
          description: ''
    delete:
      operationId: topology_connections_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this topology connection.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/topology/equipments/:
    get:
      operationId: topology_equipments_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEquipmentList'
          description: ''
    post:
      operationId: topology_equipments_create
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
  /api/topology/equipments/{id}/:
    get:
      operationId: topology_equipments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this equipment.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
    put:
      operationId: topology_equipments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this equipment.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
    patch:
      operationId: topology_equipments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this equipment.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEquipmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEquipmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEquipmentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
    delete:
      operationId: topology_equipments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this equipment.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/topology/interactive/network-map/:
    get:
      operationId: topology_interactive_network_map_retrieve
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          description: No response body
  /api/topology/interactive/topology/:
    get:
      operationId: topology_interactive_topology_retrieve
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          description: No response body
  /api/topology/link-traffic-history/:
    get:
      operationId: topology_link_traffic_history_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLinkTrafficHistoryList'
          description: ''
    post:
      operationId: topology_link_traffic_history_create
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkTrafficHistoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LinkTrafficHistoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LinkTrafficHistoryRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkTrafficHistory'
          description: ''
  /api/topology/link-traffic-history/{id}/:
    get:
      operationId: topology_link_traffic_history_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this link traffic history.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkTrafficHistory'
          description: ''
    put:
      operationId: topology_link_traffic_history_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this link traffic history.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkTrafficHistoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LinkTrafficHistoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LinkTrafficHistoryRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkTrafficHistory'
          description: ''
    patch:
      operationId: topology_link_traffic_history_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this link traffic history.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLinkTrafficHistoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLinkTrafficHistoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLinkTrafficHistoryRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkTrafficHistory'
          description: ''
    delete:
      operationId: topology_link_traffic_history_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this link traffic history.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/topology/links/:
    get:
      operationId: topology_links_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLinkList'
          description: ''
    post:
      operationId: topology_links_create
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LinkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LinkRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ''
  /api/topology/links/{id}/:
    get:
      operationId: topology_links_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this link.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ''
    put:
      operationId: topology_links_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this link.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LinkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LinkRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ''
    patch:
      operationId: topology_links_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this link.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLinkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLinkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLinkRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ''
    delete:
      operationId: topology_links_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this link.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/topology/nodes/:
    get:
      operationId: topology_nodes_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTopologyNodeList'
          description: ''
    post:
      operationId: topology_nodes_create
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyNodeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopologyNodeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopologyNodeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyNode'
          description: ''
  /api/topology/nodes/{id}/:
    get:
      operationId: topology_nodes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this topology node.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyNode'
          description: ''
    put:
      operationId: topology_nodes_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this topology node.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyNodeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopologyNodeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopologyNodeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyNode'
          description: ''
    patch:
      operationId: topology_nodes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this topology node.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTopologyNodeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTopologyNodeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTopologyNodeRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyNode'
          description: ''
    delete:
      operationId: topology_nodes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this topology node.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/topology/projects/:
    get:
      operationId: topology_projects_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTopologyProjectList'
          description: ''
    post:
      operationId: topology_projects_create
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyProjectCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopologyProjectCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopologyProjectCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyProjectCreate'
          description: ''
  /api/topology/projects/{id}/:
    get:
      operationId: topology_projects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this topology project.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyProject'
          description: ''
    put:
      operationId: topology_projects_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this topology project.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyProjectCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopologyProjectCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopologyProjectCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyProjectCreate'
          description: ''
    patch:
      operationId: topology_projects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this topology project.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTopologyProjectCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTopologyProjectCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTopologyProjectCreateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyProjectCreate'
          description: ''
    delete:
      operationId: topology_projects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this topology project.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/topology/simple/connections/:
    get:
      operationId: topology_simple_connections_list
      description: ViewSet para conexões de rede simplificadas
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNetworkConnectionSimpleList'
          description: ''
    post:
      operationId: topology_simple_connections_create
      description: ViewSet para conexões de rede simplificadas
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConnectionSimpleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NetworkConnectionSimpleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NetworkConnectionSimpleRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnectionSimple'
          description: ''
  /api/topology/simple/connections/{id}/:
    get:
      operationId: topology_simple_connections_retrieve
      description: ViewSet para conexões de rede simplificadas
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this network connection simple.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnectionSimple'
          description: ''
    put:
      operationId: topology_simple_connections_update
      description: ViewSet para conexões de rede simplificadas
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this network connection simple.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConnectionSimpleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NetworkConnectionSimpleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NetworkConnectionSimpleRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnectionSimple'
          description: ''
    patch:
      operationId: topology_simple_connections_partial_update
      description: ViewSet para conexões de rede simplificadas
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this network connection simple.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNetworkConnectionSimpleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNetworkConnectionSimpleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNetworkConnectionSimpleRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnectionSimple'
          description: ''
    delete:
      operationId: topology_simple_connections_destroy
      description: ViewSet para conexões de rede simplificadas
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this network connection simple.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/topology/simple/devices/:
    get:
      operationId: topology_simple_devices_list
      description: ViewSet para dispositivos de rede simplificados
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNetworkDeviceSimpleList'
          description: ''
    post:
      operationId: topology_simple_devices_create
      description: ViewSet para dispositivos de rede simplificados
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDeviceSimpleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NetworkDeviceSimpleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NetworkDeviceSimpleRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDeviceSimple'
          description: ''
  /api/topology/simple/devices/{id}/:
    get:
      operationId: topology_simple_devices_retrieve
      description: ViewSet para dispositivos de rede simplificados
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this network device simple.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDeviceSimple'
          description: ''
    put:
      operationId: topology_simple_devices_update
      description: ViewSet para dispositivos de rede simplificados
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this network device simple.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDeviceSimpleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NetworkDeviceSimpleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NetworkDeviceSimpleRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDeviceSimple'
          description: ''
    patch:
      operationId: topology_simple_devices_partial_update
      description: ViewSet para dispositivos de rede simplificados
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this network device simple.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNetworkDeviceSimpleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNetworkDeviceSimpleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNetworkDeviceSimpleRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDeviceSimple'
          description: ''
    delete:
      operationId: topology_simple_devices_destroy
      description: ViewSet para dispositivos de rede simplificados
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this network device simple.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/topology/simple/devices/nearby/:
    get:
      operationId: topology_simple_devices_nearby_retrieve
      description: Encontra dispositivos próximos a um ponto
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/simple/projects/:
    get:
      operationId: topology_simple_projects_list
      description: ViewSet para projetos de topologia simplificados
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTopologyProjectSimpleList'
          description: ''
    post:
      operationId: topology_simple_projects_create
      description: ViewSet para projetos de topologia simplificados
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyProjectSimpleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopologyProjectSimpleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopologyProjectSimpleRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyProjectSimple'
          description: ''
  /api/topology/simple/projects/{id}/:
    get:
      operationId: topology_simple_projects_retrieve
      description: ViewSet para projetos de topologia simplificados
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this topology project simple.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyProjectSimple'
          description: ''
    put:
      operationId: topology_simple_projects_update
      description: ViewSet para projetos de topologia simplificados
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this topology project simple.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyProjectSimpleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopologyProjectSimpleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopologyProjectSimpleRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyProjectSimple'
          description: ''
    patch:
      operationId: topology_simple_projects_partial_update
      description: ViewSet para projetos de topologia simplificados
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this topology project simple.
        required: true
      tags:
      - topology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTopologyProjectSimpleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTopologyProjectSimpleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTopologyProjectSimpleRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyProjectSimple'
          description: ''
    delete:
      operationId: topology_simple_projects_destroy
      description: ViewSet para projetos de topologia simplificados
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this topology project simple.
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      responses:
        '204':
          description: No response body
  /api/topology/simple/projects/{project_id}/connections/create/:
    post:
      operationId: topology_simple_projects_connections_create_create
      description: Cria conexão entre dispositivos
      parameters:
      - in: path
        name: project_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/simple/projects/{project_id}/devices/add/:
    post:
      operationId: topology_simple_projects_devices_add_create
      description: Adiciona dispositivo de rede ao projeto
      parameters:
      - in: path
        name: project_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/simple/projects/{project_id}/geojson/:
    get:
      operationId: topology_simple_projects_geojson_retrieve
      description: Retorna projeto em formato GeoJSON
      parameters:
      - in: path
        name: project_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/simple/projects/{project_id}/summary/:
    get:
      operationId: topology_simple_projects_summary_retrieve
      description: Retorna resumo do projeto
      parameters:
      - in: path
        name: project_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/simple/projects/create/:
    post:
      operationId: topology_simple_projects_create_create
      description: Cria um novo projeto de topologia simplificado
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/simple/projects/list/:
    get:
      operationId: topology_simple_projects_list_retrieve
      description: Lista todos os projetos
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/simple/test/:
    get:
      operationId: topology_simple_test_retrieve
      description: Endpoint de teste para verificar conectividade
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/topology-connections/save/:
    post:
      operationId: topology_topology_connections_save_create
      description: Salva apenas as conexões de topologia para um projeto existente
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/topology-nodes/save/:
    post:
      operationId: topology_topology_nodes_save_create
      description: Salva apenas os nós de topologia para um projeto existente
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/topology-projects/:
    get:
      operationId: topology_topology_projects_retrieve
      description: Lista todos os projetos de topologia do usuário
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/topology-projects/{project_id}/:
    get:
      operationId: topology_topology_projects_retrieve_2
      description: Obtém um projeto específico com todos os seus dados
      parameters:
      - in: path
        name: project_id
        schema:
          type: string
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/topology-projects/{project_id}/delete/:
    delete:
      operationId: topology_topology_projects_delete_destroy
      description: Deleta um projeto de topologia
      parameters:
      - in: path
        name: project_id
        schema:
          type: string
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '204':
          description: No response body
  /api/topology/topology-projects/{project_id}/update/:
    put:
      operationId: topology_topology_projects_update_update
      description: Atualiza um projeto de topologia existente
      parameters:
      - in: path
        name: project_id
        schema:
          type: string
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
    patch:
      operationId: topology_topology_projects_update_partial_update
      description: Atualiza um projeto de topologia existente
      parameters:
      - in: path
        name: project_id
        schema:
          type: string
        required: true
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/topology/topology-projects/save/:
    post:
      operationId: topology_topology_projects_save_create
      description: Salva um projeto completo de topologia
      tags:
      - topology
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/ping/:
    get:
      operationId: v1_ping_retrieve
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /health/live/:
    get:
      operationId: health_live_retrieve
      tags:
      - health
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
  /health/ready/:
    get:
      operationId: health_ready_retrieve
      tags:
      - health
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - type: apiKey
        in: header
        name: Authorization
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    ActionEnum:
      enum:
      - login
      - logout
      - password_change
      - mfa_setup
      - mfa_disable
      - search
      - advanced_search
      - filter_applied
      - create
      - update
      - delete
      - bulk_update
      - bulk_delete
      - report_view
      - report_export
      - dashboard_view
      - system_backup
      - system_restore
      - system_maintenance
      - config_change
      - user_create
      - user_update
      - user_delete
      - user_lock
      - user_unlock
      - permission_grant
      - permission_revoke
      - security_alert
      - suspicious_activity
      - access_denied
      - rate_limit_exceeded
      - topology_view
      - topology_edit
      - equipment_connect
      - network_config
      - mpls_analysis
      - engineering_task
      type: string
      description: |-
        * `login` - Login realizado
        * `logout` - Logout realizado
        * `password_change` - Senha alterada
        * `mfa_setup` - MFA configurado
        * `mfa_disable` - MFA desabilitado
        * `search` - Busca realizada
        * `advanced_search` - Busca avançada
        * `filter_applied` - Filtro aplicado
        * `create` - Registro criado
        * `update` - Registro atualizado
        * `delete` - Registro deletado
        * `bulk_update` - Atualização em lote
        * `bulk_delete` - Exclusão em lote
        * `report_view` - Relatório visualizado
        * `report_export` - Relatório exportado
        * `dashboard_view` - Dashboard visualizado
        * `system_backup` - Backup do sistema
        * `system_restore` - Restore do sistema
        * `system_maintenance` - Manutenção do sistema
        * `config_change` - Configuração alterada
        * `user_create` - Usuário criado
        * `user_update` - Usuário atualizado
        * `user_delete` - Usuário removido
        * `user_lock` - Usuário bloqueado
        * `user_unlock` - Usuário desbloqueado
        * `permission_grant` - Permissão concedida
        * `permission_revoke` - Permissão revogada
        * `security_alert` - Alerta de segurança
        * `suspicious_activity` - Atividade suspeita
        * `access_denied` - Acesso negado
        * `rate_limit_exceeded` - Limite de taxa excedido
        * `topology_view` - Topologia visualizada
        * `topology_edit` - Topologia editada
        * `equipment_connect` - Equipamento conectado
        * `network_config` - Configuração de rede
        * `mpls_analysis` - Análise MPLS
        * `engineering_task` - Tarefa de engenharia
    BGPConfiguration:
      type: object
      description: Serializer para configurações BGP
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        router_ip:
          type: string
        vlan:
          type: string
          maxLength: 10
        client_name:
          type: string
          maxLength: 255
        subnet_v4:
          type: string
          description: 'Formato: 10.10.10.0/30'
          maxLength: 20
        client_network_v4:
          type: string
          description: 'Formato: 170.80.80.0/22'
          maxLength: 20
        v4_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        subnet_v6:
          type: string
          description: 'Formato: 2001:db8::/126'
          maxLength: 50
        client_network_v6:
          type: string
          description: 'Formato: 2804:3768::/32'
          maxLength: 50
        v6_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        client_asn:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Autonomous System Number do cliente
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
        created_by:
          type: integer
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - client_asn
      - client_name
      - client_network_v4
      - client_network_v6
      - created_by
      - router_ip
      - subnet_v4
      - subnet_v6
      - vlan
    BGPConfigurationRequest:
      type: object
      description: Serializer para configurações BGP
      properties:
        router_ip:
          type: string
          minLength: 1
        vlan:
          type: string
          minLength: 1
          maxLength: 10
        client_name:
          type: string
          minLength: 1
          maxLength: 255
        subnet_v4:
          type: string
          minLength: 1
          description: 'Formato: 10.10.10.0/30'
          maxLength: 20
        client_network_v4:
          type: string
          minLength: 1
          description: 'Formato: 170.80.80.0/22'
          maxLength: 20
        v4_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        subnet_v6:
          type: string
          minLength: 1
          description: 'Formato: 2001:db8::/126'
          maxLength: 50
        client_network_v6:
          type: string
          minLength: 1
          description: 'Formato: 2804:3768::/32'
          maxLength: 50
        v6_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        client_asn:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Autonomous System Number do cliente
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
        created_by:
          type: integer
      required:
      - client_asn
      - client_name
      - client_network_v4
      - client_network_v6
      - created_by
      - router_ip
      - subnet_v4
      - subnet_v6
      - vlan
    CalculationMethodEnum:
      enum:
      - manual
      - straight_line
      - custom_algorithm
      type: string
      description: |-
        * `manual` - Manual
        * `straight_line` - Linha Reta
        * `custom_algorithm` - Algoritmo Personalizado
    City:
      type: object
      description: Serializer para cidades - baseado na tabela 'cidades' do l2vpn-master
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        ip_address:
          type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - ip_address
      - name
    CityRequest:
      type: object
      description: Serializer para cidades - baseado na tabela 'cidades' do l2vpn-master
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        ip_address:
          type: string
          minLength: 1
        is_active:
          type: boolean
      required:
      - ip_address
      - name
    ConnectionType486Enum:
      enum:
      - fiber
      - wireless
      - ethernet
      - logical
      type: string
      description: |-
        * `fiber` - Fibra Óptica
        * `wireless` - Wireless
        * `ethernet` - Ethernet
        * `logical` - Lógica
    DeviceTypeEnum:
      enum:
      - router
      - switch
      - server
      - host
      - antenna
      - building
      - datacenter
      - pop
      type: string
      description: |-
        * `router` - Roteador
        * `switch` - Switch
        * `server` - Servidor
        * `host` - Host
        * `antenna` - Antena
        * `building` - Prédio
        * `datacenter` - Data Center
        * `pop` - Ponto de Presença
    Equipment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        ip_address:
          type: string
        description:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - ip_address
      - name
    EquipmentRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        ip_address:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
      required:
      - ip_address
      - name
    GlobalAccessLog:
      type: object
      description: Serializer para logs de acesso global
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        user_username:
          type: string
          readOnly: true
        user_full_name:
          type: string
          readOnly: true
        ip_address:
          type: string
        user_agent:
          type: string
        login_time:
          type: string
          format: date-time
          readOnly: true
        logout_time:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/GlobalAccessLogStatusEnum'
        status_display:
          type: string
          readOnly: true
        session_key:
          type: string
          maxLength: 40
        failure_reason:
          type: string
          maxLength: 200
        app_name:
          type: string
          description: App onde ocorreu o acesso
          maxLength: 50
        endpoint:
          type: string
          description: Endpoint acessado
          maxLength: 200
        session_duration:
          type: string
          readOnly: true
      required:
      - ip_address
      - status
      - user
    GlobalAccessLogStatusEnum:
      enum:
      - success
      - failed
      - logout
      - locked
      - mfa_required
      - mfa_failed
      type: string
      description: |-
        * `success` - Sucesso
        * `failed` - Falha
        * `logout` - Logout
        * `locked` - Conta Bloqueada
        * `mfa_required` - MFA Necessário
        * `mfa_failed` - MFA Falhou
    GlobalAuditLog:
      type: object
      description: Serializer para logs de auditoria global
      properties:
        id:
          type: integer
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        user_username:
          type: string
          readOnly: true
        user_full_name:
          type: string
          readOnly: true
        action:
          $ref: '#/components/schemas/ActionEnum'
        action_display:
          type: string
          readOnly: true
        description:
          type: string
        ip_address:
          type: string
        user_agent:
          type: string
        app_name:
          type: string
          description: Nome do app Django
          maxLength: 50
        module_name:
          type: string
          description: Módulo específico (MPLS, Topology, etc)
          maxLength: 50
        endpoint:
          type: string
          description: URL/endpoint acessado
          maxLength: 200
        content_type:
          type: integer
          nullable: true
        object_id:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        content_object_str:
          type: string
          readOnly: true
        search_query:
          type: string
          description: Query de busca realizada
        export_format:
          type: string
          description: Formato de export (xlsx, csv, pdf)
          maxLength: 20
        results_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Quantidade de resultados
        old_values:
          description: Valores anteriores (para updates)
        new_values:
          description: Novos valores
        additional_data:
          description: Dados extras em JSON
        execution_time_ms:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Tempo de execução em ms
        execution_time_seconds:
          type: string
          readOnly: true
        memory_usage_mb:
          type: number
          format: double
          nullable: true
          description: Uso de memória em MB
        success:
          type: boolean
          description: Se a ação foi bem sucedida
        error_message:
          type: string
          description: Mensagem de erro se houver
      required:
      - action
      - app_name
      - description
      - ip_address
      - user
    GlobalAuditLogSummary:
      type: object
      description: Serializer resumido para listagens de logs
      properties:
        id:
          type: integer
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        user_username:
          type: string
          readOnly: true
        action_display:
          type: string
          readOnly: true
        app_name:
          type: string
          description: Nome do app Django
          maxLength: 50
        module_name:
          type: string
          description: Módulo específico (MPLS, Topology, etc)
          maxLength: 50
        success:
          type: boolean
          description: Se a ação foi bem sucedida
        ip_address:
          type: string
      required:
      - app_name
      - ip_address
    GlobalLoginAttempt:
      type: object
      description: Serializer para tentativas de login global
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 150
        ip_address:
          type: string
        user_agent:
          type: string
        success:
          type: boolean
        success_display:
          type: string
          readOnly: true
        failure_reason:
          type: string
          maxLength: 200
        timestamp:
          type: string
          format: date-time
          readOnly: true
        time_ago:
          type: string
          readOnly: true
        app_name:
          type: string
          description: App onde ocorreu a tentativa
          maxLength: 50
        endpoint:
          type: string
          description: Endpoint de login
          maxLength: 200
        geolocation:
          description: Dados de geolocalização do IP
      required:
      - ip_address
      - username
    GlobalSecuritySettings:
      type: object
      description: Serializer para configurações de segurança global
      properties:
        id:
          type: integer
          readOnly: true
        updated_by_username:
          type: string
          readOnly: true
        max_login_attempts:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Número máximo de tentativas de login antes do bloqueio
        lockout_duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Duração do bloqueio em minutos após exceder tentativas
        session_timeout_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Tempo limite da sessão em minutos (0 = nunca expira)
        concurrent_sessions_limit:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Número máximo de sessões simultâneas por usuário
        audit_retention_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Quantos dias manter logs de auditoria (0 = manter sempre)
        access_log_retention_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Quantos dias manter logs de acesso (0 = manter sempre)
        enable_ip_whitelist:
          type: boolean
          description: Habilitar lista de IPs permitidos
        allowed_ips:
          type: string
          description: IPs permitidos (um por linha, suporta CIDR)
        enable_geo_blocking:
          type: boolean
          description: Bloquear acessos de países específicos
        blocked_countries:
          type: string
          description: Códigos de países bloqueados (um por linha, formato ISO)
        password_min_length:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Comprimento mínimo da senha
        password_require_uppercase:
          type: boolean
          description: Exigir pelo menos uma letra maiúscula
        password_require_lowercase:
          type: boolean
          description: Exigir pelo menos uma letra minúscula
        password_require_numbers:
          type: boolean
          description: Exigir pelo menos um número
        password_require_symbols:
          type: boolean
          description: Exigir pelo menos um símbolo especial
        password_history_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Quantas senhas anteriores lembrar para evitar reuso
        mfa_required_for_admin:
          type: boolean
          description: MFA obrigatório para usuários administrativos
        mfa_required_for_all:
          type: boolean
          description: MFA obrigatório para todos os usuários
        mfa_backup_codes_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Número de códigos de backup MFA gerados
        api_rate_limit_per_minute:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limite de requisições de API por minuto por usuário
        search_rate_limit_per_minute:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limite de buscas por minuto por usuário
        export_rate_limit_per_hour:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limite de exports por hora por usuário
        notify_admin_on_failed_login:
          type: boolean
          description: Notificar admin sobre falhas de login
        notify_admin_on_user_lockout:
          type: boolean
          description: Notificar admin sobre bloqueios de usuário
        notify_admin_on_suspicious_activity:
          type: boolean
          description: Notificar admin sobre atividade suspeita
        admin_notification_email:
          type: string
          format: email
          description: Email para notificações administrativas
          maxLength: 254
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        updated_by:
          type: integer
          nullable: true
          description: Usuário que fez a última alteração
    GlobalSecuritySettingsRequest:
      type: object
      description: Serializer para configurações de segurança global
      properties:
        max_login_attempts:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Número máximo de tentativas de login antes do bloqueio
        lockout_duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Duração do bloqueio em minutos após exceder tentativas
        session_timeout_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Tempo limite da sessão em minutos (0 = nunca expira)
        concurrent_sessions_limit:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Número máximo de sessões simultâneas por usuário
        audit_retention_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Quantos dias manter logs de auditoria (0 = manter sempre)
        access_log_retention_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Quantos dias manter logs de acesso (0 = manter sempre)
        enable_ip_whitelist:
          type: boolean
          description: Habilitar lista de IPs permitidos
        allowed_ips:
          type: string
          description: IPs permitidos (um por linha, suporta CIDR)
        enable_geo_blocking:
          type: boolean
          description: Bloquear acessos de países específicos
        blocked_countries:
          type: string
          description: Códigos de países bloqueados (um por linha, formato ISO)
        password_min_length:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Comprimento mínimo da senha
        password_require_uppercase:
          type: boolean
          description: Exigir pelo menos uma letra maiúscula
        password_require_lowercase:
          type: boolean
          description: Exigir pelo menos uma letra minúscula
        password_require_numbers:
          type: boolean
          description: Exigir pelo menos um número
        password_require_symbols:
          type: boolean
          description: Exigir pelo menos um símbolo especial
        password_history_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Quantas senhas anteriores lembrar para evitar reuso
        mfa_required_for_admin:
          type: boolean
          description: MFA obrigatório para usuários administrativos
        mfa_required_for_all:
          type: boolean
          description: MFA obrigatório para todos os usuários
        mfa_backup_codes_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Número de códigos de backup MFA gerados
        api_rate_limit_per_minute:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limite de requisições de API por minuto por usuário
        search_rate_limit_per_minute:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limite de buscas por minuto por usuário
        export_rate_limit_per_hour:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limite de exports por hora por usuário
        notify_admin_on_failed_login:
          type: boolean
          description: Notificar admin sobre falhas de login
        notify_admin_on_user_lockout:
          type: boolean
          description: Notificar admin sobre bloqueios de usuário
        notify_admin_on_suspicious_activity:
          type: boolean
          description: Notificar admin sobre atividade suspeita
        admin_notification_email:
          type: string
          format: email
          description: Email para notificações administrativas
          maxLength: 254
        updated_by:
          type: integer
          nullable: true
          description: Usuário que fez a última alteração
    InterfaceTypeEnum:
      enum:
      - gigabit
      - ten-gigabit
      - forty-gigabit
      - twenty-five-gigabit
      - hundred-gigabit
      - lag
      type: string
      description: |-
        * `gigabit` - Gigabit Ethernet
        * `ten-gigabit` - Ten Gigabit
        * `forty-gigabit` - Forty Gigabit
        * `twenty-five-gigabit` - Twenty Five Gigabit
        * `hundred-gigabit` - Hundred Gigabit
        * `lag` - Link Aggregation Group
    L2VPNConfiguration:
      type: object
      description: Serializer para configurações L2VPN VPWS
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        pe1_city:
          type: integer
        pe1_city_name:
          type: string
          readOnly: true
        pe2_city:
          type: integer
        pe2_city_name:
          type: string
          readOnly: true
        pe1_mode:
          $ref: '#/components/schemas/Pe1ModeEnum'
        pe2_mode:
          $ref: '#/components/schemas/Pe2ModeEnum'
        pe1_vpws_group_name:
          type: string
          maxLength: 100
        pe1_vpn_id:
          type: string
          maxLength: 50
        pe1_neighbor_ip:
          type: string
        pe1_pw_id:
          type: string
          maxLength: 50
        pe1_access_interface:
          type: string
          maxLength: 100
        pe1_dot1q:
          type: string
          nullable: true
          maxLength: 10
        pe1_pw_vlan:
          type: string
          nullable: true
          maxLength: 10
        pe1_neighbor_targeted_ip:
          type: string
        pe2_vpws_group_name:
          type: string
          maxLength: 100
        pe2_vpn_id:
          type: string
          maxLength: 50
        pe2_neighbor_ip:
          type: string
        pe2_pw_id:
          type: string
          maxLength: 50
        pe2_access_interface:
          type: string
          maxLength: 100
        pe2_dot1q:
          type: string
          nullable: true
          maxLength: 10
        pe2_pw_vlan:
          type: string
          nullable: true
          maxLength: 10
        pe2_neighbor_targeted_ip:
          type: string
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
        created_by:
          type: integer
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_by
      - pe1_access_interface
      - pe1_city
      - pe1_neighbor_ip
      - pe1_neighbor_targeted_ip
      - pe1_pw_id
      - pe1_vpn_id
      - pe1_vpws_group_name
      - pe2_access_interface
      - pe2_city
      - pe2_neighbor_ip
      - pe2_neighbor_targeted_ip
      - pe2_pw_id
      - pe2_vpn_id
      - pe2_vpws_group_name
    L2VPNConfigurationRequest:
      type: object
      description: Serializer para configurações L2VPN VPWS
      properties:
        pe1_city:
          type: integer
        pe2_city:
          type: integer
        pe1_mode:
          $ref: '#/components/schemas/Pe1ModeEnum'
        pe2_mode:
          $ref: '#/components/schemas/Pe2ModeEnum'
        pe1_vpws_group_name:
          type: string
          minLength: 1
          maxLength: 100
        pe1_vpn_id:
          type: string
          minLength: 1
          maxLength: 50
        pe1_neighbor_ip:
          type: string
          minLength: 1
        pe1_pw_id:
          type: string
          minLength: 1
          maxLength: 50
        pe1_access_interface:
          type: string
          minLength: 1
          maxLength: 100
        pe1_dot1q:
          type: string
          nullable: true
          maxLength: 10
        pe1_pw_vlan:
          type: string
          nullable: true
          maxLength: 10
        pe1_neighbor_targeted_ip:
          type: string
          minLength: 1
        pe2_vpws_group_name:
          type: string
          minLength: 1
          maxLength: 100
        pe2_vpn_id:
          type: string
          minLength: 1
          maxLength: 50
        pe2_neighbor_ip:
          type: string
          minLength: 1
        pe2_pw_id:
          type: string
          minLength: 1
          maxLength: 50
        pe2_access_interface:
          type: string
          minLength: 1
          maxLength: 100
        pe2_dot1q:
          type: string
          nullable: true
          maxLength: 10
        pe2_pw_vlan:
          type: string
          nullable: true
          maxLength: 10
        pe2_neighbor_targeted_ip:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
        created_by:
          type: integer
      required:
      - created_by
      - pe1_access_interface
      - pe1_city
      - pe1_neighbor_ip
      - pe1_neighbor_targeted_ip
      - pe1_pw_id
      - pe1_vpn_id
      - pe1_vpws_group_name
      - pe2_access_interface
      - pe2_city
      - pe2_neighbor_ip
      - pe2_neighbor_targeted_ip
      - pe2_pw_id
      - pe2_vpn_id
      - pe2_vpws_group_name
    Link:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        source:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          readOnly: true
        target:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          readOnly: true
        description:
          type: string
          nullable: true
        ptp_ip:
          type: string
          nullable: true
          description: IP ponto a ponto da interface
        capacity_mbps:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Capacidade do enlace em Mbps
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    LinkRequest:
      type: object
      properties:
        description:
          type: string
          nullable: true
        ptp_ip:
          type: string
          nullable: true
          minLength: 1
          description: IP ponto a ponto da interface
        capacity_mbps:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Capacidade do enlace em Mbps
    LinkTrafficHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        traffic_in_bps:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Tráfego de entrada em bps
        traffic_out_bps:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Tráfego de saída em bps
        link:
          type: integer
      required:
      - link
      - traffic_in_bps
      - traffic_out_bps
    LinkTrafficHistoryRequest:
      type: object
      properties:
        traffic_in_bps:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Tráfego de entrada em bps
        traffic_out_bps:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Tráfego de saída em bps
        link:
          type: integer
      required:
      - link
      - traffic_in_bps
      - traffic_out_bps
    NetworkConfigurationLog:
      type: object
      description: Serializer para logs de configuração de rede
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        operation_type:
          $ref: '#/components/schemas/OperationTypeEnum'
        status:
          $ref: '#/components/schemas/NetworkConfigurationLogStatusEnum'
        target_ip:
          type: string
          nullable: true
        username:
          type: string
          maxLength: 100
        commands_executed: {}
        output:
          type: string
          nullable: true
        error_message:
          type: string
          nullable: true
        execution_time:
          type: number
          format: double
          readOnly: true
          nullable: true
        started_at:
          type: string
          format: date-time
          readOnly: true
        finished_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        l2vpn_config:
          type: string
          format: uuid
          nullable: true
        l2vpn_config_id:
          type: string
          readOnly: true
        bgp_config:
          type: string
          format: uuid
          nullable: true
        bgp_config_id:
          type: string
          readOnly: true
        ospf_config:
          type: string
          format: uuid
          nullable: true
        ospf_config_id:
          type: string
          readOnly: true
        created_by:
          type: integer
        created_by_username:
          type: string
          readOnly: true
      required:
      - created_by
      - operation_type
      - username
    NetworkConfigurationLogStatusEnum:
      enum:
      - pending
      - running
      - success
      - failed
      - cancelled
      type: string
      description: |-
        * `pending` - Pendente
        * `running` - Executando
        * `success` - Sucesso
        * `failed` - Falhou
        * `cancelled` - Cancelado
    NetworkConnectionSimple:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        connection_type:
          $ref: '#/components/schemas/NetworkConnectionSimpleConnectionTypeEnum'
        properties:
          description: Propriedades técnicas da conexão
        path_coordinates:
          description: Array de coordenadas do caminho
        is_calculated:
          type: boolean
          description: Se o caminho foi calculado automaticamente
        calculation_method:
          $ref: '#/components/schemas/CalculationMethodEnum'
        calculation_metadata:
          description: Metadados do cálculo do caminho
        style_properties:
          description: Propriedades de estilo visual
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        project:
          type: string
          format: uuid
        source_device:
          type: string
          format: uuid
        target_device:
          type: string
          format: uuid
      required:
      - connection_type
      - project
      - source_device
      - target_device
    NetworkConnectionSimpleConnectionTypeEnum:
      enum:
      - fiber
      - wireless
      - ethernet
      - satellite
      - microwave
      - logical
      type: string
      description: |-
        * `fiber` - Fibra Óptica
        * `wireless` - Wireless
        * `ethernet` - Ethernet
        * `satellite` - Satélite
        * `microwave` - Microondas
        * `logical` - Lógica
    NetworkConnectionSimpleRequest:
      type: object
      properties:
        connection_type:
          $ref: '#/components/schemas/NetworkConnectionSimpleConnectionTypeEnum'
        properties:
          description: Propriedades técnicas da conexão
        path_coordinates:
          description: Array de coordenadas do caminho
        is_calculated:
          type: boolean
          description: Se o caminho foi calculado automaticamente
        calculation_method:
          $ref: '#/components/schemas/CalculationMethodEnum'
        calculation_metadata:
          description: Metadados do cálculo do caminho
        style_properties:
          description: Propriedades de estilo visual
        project:
          type: string
          format: uuid
        source_device:
          type: string
          format: uuid
        target_device:
          type: string
          format: uuid
      required:
      - connection_type
      - project
      - source_device
      - target_device
    NetworkDeviceSimple:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        device_type:
          $ref: '#/components/schemas/DeviceTypeEnum'
        latitude:
          type: number
          format: double
          description: Latitude do dispositivo
        longitude:
          type: number
          format: double
          description: Longitude do dispositivo
        altitude:
          type: number
          format: double
          nullable: true
          description: Altitude em metros
        properties:
          description: Propriedades técnicas do dispositivo
        status:
          $ref: '#/components/schemas/NetworkDeviceSimpleStatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        project:
          type: string
          format: uuid
      required:
      - device_type
      - latitude
      - longitude
      - name
      - project
    NetworkDeviceSimpleRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        device_type:
          $ref: '#/components/schemas/DeviceTypeEnum'
        latitude:
          type: number
          format: double
          description: Latitude do dispositivo
        longitude:
          type: number
          format: double
          description: Longitude do dispositivo
        altitude:
          type: number
          format: double
          nullable: true
          description: Altitude em metros
        properties:
          description: Propriedades técnicas do dispositivo
        status:
          $ref: '#/components/schemas/NetworkDeviceSimpleStatusEnum'
        project:
          type: string
          format: uuid
      required:
      - device_type
      - latitude
      - longitude
      - name
      - project
    NetworkDeviceSimpleStatusEnum:
      enum:
      - active
      - inactive
      - maintenance
      - failure
      type: string
      description: |-
        * `active` - Ativo
        * `inactive` - Inativo
        * `maintenance` - Manutenção
        * `failure` - Falha
    NetworkInterface:
      type: object
      description: Serializer para interfaces de rede
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        city:
          type: integer
        city_name:
          type: string
          readOnly: true
        interface_type:
          $ref: '#/components/schemas/InterfaceTypeEnum'
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - city
      - name
    NetworkInterfaceRequest:
      type: object
      description: Serializer para interfaces de rede
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        city:
          type: integer
        interface_type:
          $ref: '#/components/schemas/InterfaceTypeEnum'
        is_active:
          type: boolean
      required:
      - city
      - name
    NodeTypeEnum:
      enum:
      - router
      - switch
      - server
      - host
      - antenna
      - building
      type: string
      description: |-
        * `router` - Roteador
        * `switch` - Switch
        * `server` - Servidor
        * `host` - Host
        * `antenna` - Antena
        * `building` - Prédio
    OSPFConfiguration:
      type: object
      description: Serializer para configurações OSPF
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        router_ip:
          type: string
        process_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        router_id:
          type: string
        area_id:
          type: string
          maxLength: 20
        interface:
          type: string
          maxLength: 100
        cost:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Interface cost (1-65535)
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
        created_by:
          type: integer
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_by
      - interface
      - router_id
      - router_ip
    OSPFConfigurationRequest:
      type: object
      description: Serializer para configurações OSPF
      properties:
        router_ip:
          type: string
          minLength: 1
        process_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        router_id:
          type: string
          minLength: 1
        area_id:
          type: string
          minLength: 1
          maxLength: 20
        interface:
          type: string
          minLength: 1
          maxLength: 100
        cost:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Interface cost (1-65535)
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
        created_by:
          type: integer
      required:
      - created_by
      - interface
      - router_id
      - router_ip
    OperationTypeEnum:
      enum:
      - l2vpn
      - bgp
      - ospf
      - commit
      type: string
      description: |-
        * `l2vpn` - L2VPN Configuration
        * `bgp` - BGP Configuration
        * `ospf` - OSPF Configuration
        * `commit` - Commit Configuration
    PaginatedBGPConfigurationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BGPConfiguration'
    PaginatedCityList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/City'
    PaginatedEquipmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
    PaginatedGlobalAccessLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GlobalAccessLog'
    PaginatedGlobalAuditLogSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GlobalAuditLogSummary'
    PaginatedGlobalLoginAttemptList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GlobalLoginAttempt'
    PaginatedGlobalSecuritySettingsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GlobalSecuritySettings'
    PaginatedL2VPNConfigurationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/L2VPNConfiguration'
    PaginatedLinkList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    PaginatedLinkTrafficHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LinkTrafficHistory'
    PaginatedNetworkConfigurationLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NetworkConfigurationLog'
    PaginatedNetworkConnectionSimpleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NetworkConnectionSimple'
    PaginatedNetworkDeviceSimpleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NetworkDeviceSimple'
    PaginatedNetworkInterfaceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
    PaginatedOSPFConfigurationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OSPFConfiguration'
    PaginatedTopologyConnectionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TopologyConnection'
    PaginatedTopologyNodeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TopologyNode'
    PaginatedTopologyProjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TopologyProject'
    PaginatedTopologyProjectSimpleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TopologyProjectSimple'
    PaginatedUserActivitySummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserActivitySummary'
    PatchedBGPConfigurationRequest:
      type: object
      description: Serializer para configurações BGP
      properties:
        router_ip:
          type: string
          minLength: 1
        vlan:
          type: string
          minLength: 1
          maxLength: 10
        client_name:
          type: string
          minLength: 1
          maxLength: 255
        subnet_v4:
          type: string
          minLength: 1
          description: 'Formato: 10.10.10.0/30'
          maxLength: 20
        client_network_v4:
          type: string
          minLength: 1
          description: 'Formato: 170.80.80.0/22'
          maxLength: 20
        v4_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        subnet_v6:
          type: string
          minLength: 1
          description: 'Formato: 2001:db8::/126'
          maxLength: 50
        client_network_v6:
          type: string
          minLength: 1
          description: 'Formato: 2804:3768::/32'
          maxLength: 50
        v6_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        client_asn:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Autonomous System Number do cliente
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
        created_by:
          type: integer
    PatchedCityRequest:
      type: object
      description: Serializer para cidades - baseado na tabela 'cidades' do l2vpn-master
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        ip_address:
          type: string
          minLength: 1
        is_active:
          type: boolean
    PatchedEquipmentRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        ip_address:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
    PatchedGlobalSecuritySettingsRequest:
      type: object
      description: Serializer para configurações de segurança global
      properties:
        max_login_attempts:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Número máximo de tentativas de login antes do bloqueio
        lockout_duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Duração do bloqueio em minutos após exceder tentativas
        session_timeout_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Tempo limite da sessão em minutos (0 = nunca expira)
        concurrent_sessions_limit:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Número máximo de sessões simultâneas por usuário
        audit_retention_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Quantos dias manter logs de auditoria (0 = manter sempre)
        access_log_retention_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Quantos dias manter logs de acesso (0 = manter sempre)
        enable_ip_whitelist:
          type: boolean
          description: Habilitar lista de IPs permitidos
        allowed_ips:
          type: string
          description: IPs permitidos (um por linha, suporta CIDR)
        enable_geo_blocking:
          type: boolean
          description: Bloquear acessos de países específicos
        blocked_countries:
          type: string
          description: Códigos de países bloqueados (um por linha, formato ISO)
        password_min_length:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Comprimento mínimo da senha
        password_require_uppercase:
          type: boolean
          description: Exigir pelo menos uma letra maiúscula
        password_require_lowercase:
          type: boolean
          description: Exigir pelo menos uma letra minúscula
        password_require_numbers:
          type: boolean
          description: Exigir pelo menos um número
        password_require_symbols:
          type: boolean
          description: Exigir pelo menos um símbolo especial
        password_history_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Quantas senhas anteriores lembrar para evitar reuso
        mfa_required_for_admin:
          type: boolean
          description: MFA obrigatório para usuários administrativos
        mfa_required_for_all:
          type: boolean
          description: MFA obrigatório para todos os usuários
        mfa_backup_codes_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Número de códigos de backup MFA gerados
        api_rate_limit_per_minute:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limite de requisições de API por minuto por usuário
        search_rate_limit_per_minute:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limite de buscas por minuto por usuário
        export_rate_limit_per_hour:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limite de exports por hora por usuário
        notify_admin_on_failed_login:
          type: boolean
          description: Notificar admin sobre falhas de login
        notify_admin_on_user_lockout:
          type: boolean
          description: Notificar admin sobre bloqueios de usuário
        notify_admin_on_suspicious_activity:
          type: boolean
          description: Notificar admin sobre atividade suspeita
        admin_notification_email:
          type: string
          format: email
          description: Email para notificações administrativas
          maxLength: 254
        updated_by:
          type: integer
          nullable: true
          description: Usuário que fez a última alteração
    PatchedL2VPNConfigurationRequest:
      type: object
      description: Serializer para configurações L2VPN VPWS
      properties:
        pe1_city:
          type: integer
        pe2_city:
          type: integer
        pe1_mode:
          $ref: '#/components/schemas/Pe1ModeEnum'
        pe2_mode:
          $ref: '#/components/schemas/Pe2ModeEnum'
        pe1_vpws_group_name:
          type: string
          minLength: 1
          maxLength: 100
        pe1_vpn_id:
          type: string
          minLength: 1
          maxLength: 50
        pe1_neighbor_ip:
          type: string
          minLength: 1
        pe1_pw_id:
          type: string
          minLength: 1
          maxLength: 50
        pe1_access_interface:
          type: string
          minLength: 1
          maxLength: 100
        pe1_dot1q:
          type: string
          nullable: true
          maxLength: 10
        pe1_pw_vlan:
          type: string
          nullable: true
          maxLength: 10
        pe1_neighbor_targeted_ip:
          type: string
          minLength: 1
        pe2_vpws_group_name:
          type: string
          minLength: 1
          maxLength: 100
        pe2_vpn_id:
          type: string
          minLength: 1
          maxLength: 50
        pe2_neighbor_ip:
          type: string
          minLength: 1
        pe2_pw_id:
          type: string
          minLength: 1
          maxLength: 50
        pe2_access_interface:
          type: string
          minLength: 1
          maxLength: 100
        pe2_dot1q:
          type: string
          nullable: true
          maxLength: 10
        pe2_pw_vlan:
          type: string
          nullable: true
          maxLength: 10
        pe2_neighbor_targeted_ip:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
        created_by:
          type: integer
    PatchedLinkRequest:
      type: object
      properties:
        description:
          type: string
          nullable: true
        ptp_ip:
          type: string
          nullable: true
          minLength: 1
          description: IP ponto a ponto da interface
        capacity_mbps:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Capacidade do enlace em Mbps
    PatchedLinkTrafficHistoryRequest:
      type: object
      properties:
        traffic_in_bps:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Tráfego de entrada em bps
        traffic_out_bps:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Tráfego de saída em bps
        link:
          type: integer
    PatchedNetworkConnectionSimpleRequest:
      type: object
      properties:
        connection_type:
          $ref: '#/components/schemas/NetworkConnectionSimpleConnectionTypeEnum'
        properties:
          description: Propriedades técnicas da conexão
        path_coordinates:
          description: Array de coordenadas do caminho
        is_calculated:
          type: boolean
          description: Se o caminho foi calculado automaticamente
        calculation_method:
          $ref: '#/components/schemas/CalculationMethodEnum'
        calculation_metadata:
          description: Metadados do cálculo do caminho
        style_properties:
          description: Propriedades de estilo visual
        project:
          type: string
          format: uuid
        source_device:
          type: string
          format: uuid
        target_device:
          type: string
          format: uuid
    PatchedNetworkDeviceSimpleRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        device_type:
          $ref: '#/components/schemas/DeviceTypeEnum'
        latitude:
          type: number
          format: double
          description: Latitude do dispositivo
        longitude:
          type: number
          format: double
          description: Longitude do dispositivo
        altitude:
          type: number
          format: double
          nullable: true
          description: Altitude em metros
        properties:
          description: Propriedades técnicas do dispositivo
        status:
          $ref: '#/components/schemas/NetworkDeviceSimpleStatusEnum'
        project:
          type: string
          format: uuid
    PatchedNetworkInterfaceRequest:
      type: object
      description: Serializer para interfaces de rede
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        city:
          type: integer
        interface_type:
          $ref: '#/components/schemas/InterfaceTypeEnum'
        is_active:
          type: boolean
    PatchedOSPFConfigurationRequest:
      type: object
      description: Serializer para configurações OSPF
      properties:
        router_ip:
          type: string
          minLength: 1
        process_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        router_id:
          type: string
          minLength: 1
        area_id:
          type: string
          minLength: 1
          maxLength: 20
        interface:
          type: string
          minLength: 1
          maxLength: 100
        cost:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Interface cost (1-65535)
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
        created_by:
          type: integer
    PatchedTopologyConnectionRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 50
        connection_type:
          $ref: '#/components/schemas/ConnectionType486Enum'
        bandwidth:
          type: string
          nullable: true
          maxLength: 50
        path: {}
        is_calculated:
          type: boolean
        distance:
          type: number
          format: double
          nullable: true
        length:
          type: number
          format: double
          nullable: true
        latency:
          type: number
          format: double
          nullable: true
        utilization:
          type: number
          format: double
          nullable: true
        traffic_inbound:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        traffic_outbound:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        traffic_latency:
          type: number
          format: double
          nullable: true
        color:
          type: string
          minLength: 1
          maxLength: 7
        width:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        opacity:
          type: number
          format: double
        dash_array:
          type: string
          nullable: true
          maxLength: 20
        project:
          type: string
          minLength: 1
    PatchedTopologyNodeRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 50
        name:
          type: string
          minLength: 1
          maxLength: 200
        node_type:
          $ref: '#/components/schemas/NodeTypeEnum'
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        ip_address:
          type: string
          nullable: true
          minLength: 1
        model:
          type: string
          nullable: true
          maxLength: 100
        vendor:
          type: string
          nullable: true
          maxLength: 100
        capacity:
          type: string
          nullable: true
          maxLength: 50
        status:
          $ref: '#/components/schemas/StatusB0cEnum'
        connections: {}
        project:
          type: string
          minLength: 1
    PatchedTopologyProjectCreateRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 50
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/TopologyNodeCreateRequest'
        connections:
          type: array
          items:
            $ref: '#/components/schemas/TopologyConnectionCreateRequest'
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          nullable: true
        center_latitude:
          type: number
          format: double
        center_longitude:
          type: number
          format: double
        zoom:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
    PatchedTopologyProjectSimpleRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        center_latitude:
          type: number
          format: double
          description: Latitude central do projeto
        center_longitude:
          type: number
          format: double
          description: Longitude central do projeto
        zoom_level:
          allOf:
          - $ref: '#/components/schemas/ZoomLevelEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
    Pe1ModeEnum:
      enum:
      - qinq
      - access
      - vlan-selective
      type: string
      description: |-
        * `qinq` - QinQ
        * `access` - Access
        * `vlan-selective` - VLAN Selective
    Pe2ModeEnum:
      enum:
      - qinq
      - access
      - vlan-selective
      type: string
      description: |-
        * `qinq` - QinQ
        * `access` - Access
        * `vlan-selective` - VLAN Selective
    StatusB0cEnum:
      enum:
      - online
      - offline
      - warning
      type: string
      description: |-
        * `online` - Online
        * `offline` - Offline
        * `warning` - Warning
    TopologyConnection:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        source_node:
          allOf:
          - $ref: '#/components/schemas/TopologyNode'
          readOnly: true
        target_node:
          allOf:
          - $ref: '#/components/schemas/TopologyNode'
          readOnly: true
        connection_type:
          $ref: '#/components/schemas/ConnectionType486Enum'
        bandwidth:
          type: string
          nullable: true
          maxLength: 50
        path: {}
        is_calculated:
          type: boolean
        distance:
          type: number
          format: double
          nullable: true
        length:
          type: number
          format: double
          nullable: true
        latency:
          type: number
          format: double
          nullable: true
        utilization:
          type: number
          format: double
          nullable: true
        traffic_inbound:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        traffic_outbound:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        traffic_latency:
          type: number
          format: double
          nullable: true
        color:
          type: string
          maxLength: 7
        width:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        opacity:
          type: number
          format: double
        dash_array:
          type: string
          nullable: true
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        project:
          type: string
      required:
      - connection_type
      - id
      - path
      - project
    TopologyConnectionCreate:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        source_node:
          type: string
        target_node:
          type: string
        connection_type:
          $ref: '#/components/schemas/ConnectionType486Enum'
        bandwidth:
          type: string
          nullable: true
          maxLength: 50
        path: {}
        is_calculated:
          type: boolean
        distance:
          type: number
          format: double
          nullable: true
        length:
          type: number
          format: double
          nullable: true
        latency:
          type: number
          format: double
          nullable: true
        utilization:
          type: number
          format: double
          nullable: true
        traffic_inbound:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        traffic_outbound:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        traffic_latency:
          type: number
          format: double
          nullable: true
        color:
          type: string
          maxLength: 7
        width:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        opacity:
          type: number
          format: double
        dash_array:
          type: string
          nullable: true
          maxLength: 20
      required:
      - connection_type
      - id
      - path
    TopologyConnectionCreateRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 50
        source_node:
          type: string
          minLength: 1
        target_node:
          type: string
          minLength: 1
        connection_type:
          $ref: '#/components/schemas/ConnectionType486Enum'
        bandwidth:
          type: string
          nullable: true
          maxLength: 50
        path: {}
        is_calculated:
          type: boolean
        distance:
          type: number
          format: double
          nullable: true
        length:
          type: number
          format: double
          nullable: true
        latency:
          type: number
          format: double
          nullable: true
        utilization:
          type: number
          format: double
          nullable: true
        traffic_inbound:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        traffic_outbound:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        traffic_latency:
          type: number
          format: double
          nullable: true
        color:
          type: string
          minLength: 1
          maxLength: 7
        width:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        opacity:
          type: number
          format: double
        dash_array:
          type: string
          nullable: true
          maxLength: 20
      required:
      - connection_type
      - id
      - path
    TopologyConnectionRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 50
        connection_type:
          $ref: '#/components/schemas/ConnectionType486Enum'
        bandwidth:
          type: string
          nullable: true
          maxLength: 50
        path: {}
        is_calculated:
          type: boolean
        distance:
          type: number
          format: double
          nullable: true
        length:
          type: number
          format: double
          nullable: true
        latency:
          type: number
          format: double
          nullable: true
        utilization:
          type: number
          format: double
          nullable: true
        traffic_inbound:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        traffic_outbound:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        traffic_latency:
          type: number
          format: double
          nullable: true
        color:
          type: string
          minLength: 1
          maxLength: 7
        width:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        opacity:
          type: number
          format: double
        dash_array:
          type: string
          nullable: true
          maxLength: 20
        project:
          type: string
          minLength: 1
      required:
      - connection_type
      - id
      - path
      - project
    TopologyNode:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        name:
          type: string
          maxLength: 200
        node_type:
          $ref: '#/components/schemas/NodeTypeEnum'
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        ip_address:
          type: string
          nullable: true
        model:
          type: string
          nullable: true
          maxLength: 100
        vendor:
          type: string
          nullable: true
          maxLength: 100
        capacity:
          type: string
          nullable: true
          maxLength: 50
        status:
          $ref: '#/components/schemas/StatusB0cEnum'
        connections: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        project:
          type: string
      required:
      - id
      - latitude
      - longitude
      - name
      - node_type
      - project
    TopologyNodeCreate:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        name:
          type: string
          maxLength: 200
        node_type:
          $ref: '#/components/schemas/NodeTypeEnum'
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        ip_address:
          type: string
          nullable: true
        model:
          type: string
          nullable: true
          maxLength: 100
        vendor:
          type: string
          nullable: true
          maxLength: 100
        capacity:
          type: string
          nullable: true
          maxLength: 50
        status:
          $ref: '#/components/schemas/StatusB0cEnum'
        connections: {}
      required:
      - id
      - latitude
      - longitude
      - name
      - node_type
    TopologyNodeCreateRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 50
        name:
          type: string
          minLength: 1
          maxLength: 200
        node_type:
          $ref: '#/components/schemas/NodeTypeEnum'
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        ip_address:
          type: string
          nullable: true
          minLength: 1
        model:
          type: string
          nullable: true
          maxLength: 100
        vendor:
          type: string
          nullable: true
          maxLength: 100
        capacity:
          type: string
          nullable: true
          maxLength: 50
        status:
          $ref: '#/components/schemas/StatusB0cEnum'
        connections: {}
      required:
      - id
      - latitude
      - longitude
      - name
      - node_type
    TopologyNodeRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 50
        name:
          type: string
          minLength: 1
          maxLength: 200
        node_type:
          $ref: '#/components/schemas/NodeTypeEnum'
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        ip_address:
          type: string
          nullable: true
          minLength: 1
        model:
          type: string
          nullable: true
          maxLength: 100
        vendor:
          type: string
          nullable: true
          maxLength: 100
        capacity:
          type: string
          nullable: true
          maxLength: 50
        status:
          $ref: '#/components/schemas/StatusB0cEnum'
        connections: {}
        project:
          type: string
          minLength: 1
      required:
      - id
      - latitude
      - longitude
      - name
      - node_type
      - project
    TopologyProject:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/TopologyNode'
          readOnly: true
        connections:
          type: array
          items:
            $ref: '#/components/schemas/TopologyConnection'
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        center_latitude:
          type: number
          format: double
        center_longitude:
          type: number
          format: double
        zoom:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - center_latitude
      - center_longitude
      - id
      - name
    TopologyProjectCreate:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/TopologyNodeCreate'
        connections:
          type: array
          items:
            $ref: '#/components/schemas/TopologyConnectionCreate'
        name:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        center_latitude:
          type: number
          format: double
        center_longitude:
          type: number
          format: double
        zoom:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - center_latitude
      - center_longitude
      - id
      - name
    TopologyProjectCreateRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 50
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/TopologyNodeCreateRequest'
        connections:
          type: array
          items:
            $ref: '#/components/schemas/TopologyConnectionCreateRequest'
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          nullable: true
        center_latitude:
          type: number
          format: double
        center_longitude:
          type: number
          format: double
        zoom:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
      required:
      - center_latitude
      - center_longitude
      - id
      - name
    TopologyProjectSimple:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        center_latitude:
          type: number
          format: double
          description: Latitude central do projeto
        center_longitude:
          type: number
          format: double
          description: Longitude central do projeto
        zoom_level:
          allOf:
          - $ref: '#/components/schemas/ZoomLevelEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - center_latitude
      - center_longitude
      - name
    TopologyProjectSimpleRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        center_latitude:
          type: number
          format: double
          description: Latitude central do projeto
        center_longitude:
          type: number
          format: double
          description: Longitude central do projeto
        zoom_level:
          allOf:
          - $ref: '#/components/schemas/ZoomLevelEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
      required:
      - center_latitude
      - center_longitude
      - name
    UserActivitySummary:
      type: object
      description: Serializer para resumo de atividade do usuário
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        username:
          type: string
          readOnly: true
        user_full_name:
          type: string
          readOnly: true
        user_email:
          type: string
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        is_staff:
          type: boolean
          readOnly: true
        total_logins:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        total_searches:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        total_exports:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        total_admin_actions:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        last_login:
          type: string
          format: date-time
          nullable: true
        last_activity:
          type: string
          format: date-time
          nullable: true
        last_activity_ago:
          type: string
          readOnly: true
        last_ip:
          type: string
          nullable: true
        failed_login_attempts_today:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        suspicious_activity_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        security_risk_level:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - user
    UserActivitySummaryRequest:
      type: object
      description: Serializer para resumo de atividade do usuário
      properties:
        user:
          type: integer
        total_logins:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        total_searches:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        total_exports:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        total_admin_actions:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        last_login:
          type: string
          format: date-time
          nullable: true
        last_activity:
          type: string
          format: date-time
          nullable: true
        last_ip:
          type: string
          nullable: true
          minLength: 1
        failed_login_attempts_today:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        suspicious_activity_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - user
    ZoomLevelEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 18
      type: integer
      description: |-
        * `1` - 1
        * `2` - 2
        * `3` - 3
        * `4` - 4
        * `5` - 5
        * `6` - 6
        * `7` - 7
        * `8` - 8
        * `9` - 9
        * `10` - 10
        * `11` - 11
        * `12` - 12
        * `13` - 13
        * `14` - 14
        * `15` - 15
        * `16` - 16
        * `17` - 17
        * `18` - 18
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: authentication
  description: Operações de autenticação e autorização
- name: users
  description: Gerenciamento de usuários
- name: topology
  description: Topologia de rede e dispositivos
- name: engineering
  description: Operações de engenharia
- name: security
  description: Segurança e monitoramento
- name: mpls
  description: Sistema MPLS Analyzer - Análise de configurações MPLS
- name: mpls-search
  description: Busca inteligente MPLS
- name: mpls-reports
  description: Relatórios MPLS
- name: mpls-admin
  description: Administração MPLS
- name: audit
  description: Sistema Global de Auditoria - Logs, segurança e monitoramento
- name: audit-logs
  description: Logs de auditoria de todas as ações do sistema
- name: audit-security
  description: Configurações e dashboard de segurança
- name: audit-monitoring
  description: Monitoramento e health checks do sistema
externalDocs:
  description: Documentação completa do CoreWise
  url: https://github.com/your-org/CoreWise
